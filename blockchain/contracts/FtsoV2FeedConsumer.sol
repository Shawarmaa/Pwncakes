// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0 <0.9.0;

import {ContractRegistry} from "@flarenetwork/flare-periphery-contracts/coston2/ContractRegistry.sol";
/* THIS IS A TEST IMPORT, in production use: import {FtsoV2Interface} from "@flarenetwork/flare-periphery-contracts/coston2/FtsoV2Interface.sol"; */
import {TestFtsoV2Interface} from "@flarenetwork/flare-periphery-contracts/coston2/TestFtsoV2Interface.sol";

/**
 * THIS IS AN EXAMPLE CONTRACT.
 * DO NOT USE THIS CODE IN PRODUCTION.
 */
contract FtsoV2FeedConsumer {
    TestFtsoV2Interface internal ftsoV2;
    // Feed IDs, see https://dev.flare.network/ftso/feeds for full list
    bytes21[] public feedIds = [
        bytes21(0x01464c522f55534400000000000000000000000000), // FLR/USD
        bytes21(0x015347422f55534400000000000000000000000000), // SGB/USD
        bytes21(0x014254432f55534400000000000000000000000000), // BTC/USD
        bytes21(0x015852502f55534400000000000000000000000000), // XRP/USD
        bytes21(0x014c54432f55534400000000000000000000000000), // LTC/USD
        bytes21(0x01584c4d2f55534400000000000000000000000000), // XLM/USD
        bytes21(0x01444f47452f555344000000000000000000000000), // DOGE/USD
        bytes21(0x014144412f55534400000000000000000000000000), // ADA/USD
        bytes21(0x01414c474f2f555344000000000000000000000000), // ALGO/USD
        bytes21(0x014554482f55534400000000000000000000000000), // ETH/USD
        bytes21(0x0146494c2f55534400000000000000000000000000), // FIL/USD
        bytes21(0x014152422f55534400000000000000000000000000), // ARB/USD
        bytes21(0x01415641582f555344000000000000000000000000), // AVAX/USD
        bytes21(0x01424e422f55534400000000000000000000000000), // BNB/USD
        bytes21(0x01504f4c2f55534400000000000000000000000000), // POL/USD
        bytes21(0x01534f4c2f55534400000000000000000000000000), // SOL/USD
        bytes21(0x01555344432f555344000000000000000000000000), // USDC/USD
        bytes21(0x01555344542f555344000000000000000000000000), // USDT/USD
        bytes21(0x015844432f55534400000000000000000000000000), // XDC/USD
        bytes21(0x015452582f55534400000000000000000000000000), // TRX/USD
        bytes21(0x014c494e4b2f555344000000000000000000000000), // LINK/USD
        bytes21(0x0141544f4d2f555344000000000000000000000000), // ATOM/USD
        bytes21(0x01444f542f55534400000000000000000000000000), // DOT/USD
        bytes21(0x01544f4e2f55534400000000000000000000000000), // TON/USD
        bytes21(0x014943502f55534400000000000000000000000000), // ICP/USD
        bytes21(0x01534849422f555344000000000000000000000000), // SHIB/USD
        bytes21(0x014441492f55534400000000000000000000000000), // DAI/USD
        bytes21(0x014243482f55534400000000000000000000000000), // BCH/USD
        bytes21(0x014e4541522f555344000000000000000000000000), // NEAR/USD
        bytes21(0x014c454f2f55534400000000000000000000000000), // LEO/USD
        bytes21(0x01554e492f55534400000000000000000000000000), // UNI/USD
        bytes21(0x014554432f55534400000000000000000000000000), // ETC/USD
        bytes21(0x015749462f55534400000000000000000000000000), // WIF/USD
        bytes21(0x01424f4e4b2f555344000000000000000000000000), // BONK/USD
        bytes21(0x014a55502f55534400000000000000000000000000), // JUP/USD
        bytes21(0x0145544846492f5553440000000000000000000000), // ETHFI/USD
        bytes21(0x01454e412f55534400000000000000000000000000), // ENA/USD
        bytes21(0x01505954482f555344000000000000000000000000), // PYTH/USD
        bytes21(0x01484e542f55534400000000000000000000000000), // HNT/USD
        bytes21(0x015355492f55534400000000000000000000000000), // SUI/USD
        bytes21(0x01504550452f555344000000000000000000000000), // PEPE/USD
        bytes21(0x01514e542f55534400000000000000000000000000), // QNT/USD
        bytes21(0x01414156452f555344000000000000000000000000), // AAVE/USD
        bytes21(0x0146544d2f55534400000000000000000000000000), // FTM/USD
        bytes21(0x014f4e444f2f555344000000000000000000000000), // ONDO/USD
        bytes21(0x0154414f2f55534400000000000000000000000000), // TAO/USD
        bytes21(0x014645542f55534400000000000000000000000000), // FET/USD
        bytes21(0x0152454e4445522f55534400000000000000000000), // RENDER/USD
        bytes21(0x014e4f542f55534400000000000000000000000000), // NOT/USD
        bytes21(0x0152554e452f555344000000000000000000000000), // RUNE/USD
        bytes21(0x015452554d502f5553440000000000000000000000)  // TRUMP/USD
    ];

    /**
     * Get the current value of the feeds.
     */
    function getFtsoV2CurrentFeedValues()
    external
    returns (
        uint256[] memory _feedValues,
        int8[] memory _decimals,
        uint64 _timestamp
    )
    {
        /* THIS IS A TEST METHOD, in production use: ftsoV2 = ContractRegistry.getFtsoV2(); */
        ftsoV2 = ContractRegistry.getTestFtsoV2();
        /* Your custom feed consumption logic. In this example the values are just returned. */
        return ftsoV2.getFeedsById(feedIds);
    }
}